import React, { useState } from "react";
import { CiLock, CiUnlock } from "react-icons/ci";
const PopupReport = ({
  openPopUp,
  employee_id,
  report,
  closePopUp,
  handleSetDraftReport,
  domain,
}) => {
  const [isLeftEditable, setIsLeftEditable] = useState(false);
  // const [leftText, setLeftText] = useState(report);
  if (openPopUp !== true) return null;

  function handleLeftEdit() {
    setIsLeftEditable(true);
  }

  function handleLeftSave() {
    setIsLeftEditable(false);
  }

  function handleLeftChange(e) {
    handleSetDraftReport(e.target.value);
  }

  function handleLosePopUp(e) {
    if (e.target.id === "ModelContainer") {
      closePopUp();
    }
  }

  const highlightText = (text) => {
    if (isLeftEditable) {
      return text.replace(/(\*\*)(.*?)\1/g, "<b>$2</b>");
    } else {
      return text.replace(/(\*\*)(.*?)\1/g, "<b>$2</b>").replace(/\n/g, "<br>");
    }
  };

  const formatReport = (report) => {
    return report
      .split("\n")
      .map((line) => {
        const matches = line.match(/(\*\*.*?\*\*)/g);
        if (matches) {
          return matches.reduce((acc, match) => {
            return acc.replace(match, `<b>${match.slice(2, -2)}</b>`);
          }, line);
        } else {
          return line;
        }
      })
      .join("\n");
  };
  return (
    <div
      id="ModelContainer"
      onClick={handleLosePopUp}
      className="fixed inset-0 bg-white flex justify-center items-center bg-opacity-20 backdrop-blur-sm "
      style={{ backdropFilter: "blur(8px)", zIndex: 9999 }}
    >
      <div className="p-2  bg-[#F0F0F0] w-[70%] shadow-inner border-e-emerald-600 rounded-lg py-5 flex h-[80%]">
        <div className="flex w-[100%] h-[100%]">
          <div className="w-[100%] h-[100%] pr-1">
            <div className="h-[100%]">
              <div className="flex w-[100%] ">
                <div className="flex justify-start font-bold w-[100%] text-black">
                  <h2 className="">Draft Report Generated by AI :</h2>
                </div>
                <div className="flex justify-end w-[100%]">
                  {!isLeftEditable ? (
                    <button
                      className="border border-gray-500 bg-green-300 p-1 rounded-lg"
                      onClick={handleLeftEdit}
                    >
                      <CiLock size={27} />
                    </button>
                  ) : (
                    <button
                      className="border border-gray-500 bg-red-300 p-1 rounded-lg"
                      onClick={handleLeftSave}
                    >
                      <CiUnlock size={27} />
                    </button>
                  )}
                </div>
              </div>
              {isLeftEditable ? (
                <textarea
                  className="border border-gray-500 text-black mt-3 rounded-lg w-[100%] h-[80%]"
                  readOnly={!isLeftEditable}
                  value={highlightText(report)}
                  onChange={handleLeftChange}
                />
              ) : (
                // <div className="flex p-4 border rounded-md">
                  <div className="h-[380px] mt-2 overflow-y-auto border rounded-md">
                    <div
                      className="w-full text-black"
                      dangerouslySetInnerHTML={{
                        __html: highlightText(report),
                      }}
                    />
                  </div>
                // </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PopupReport;